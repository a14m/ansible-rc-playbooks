---
- name: "Copy playbooks on live environment"
  block:
    - name: "Archive playbook on localhost"
      community.general.archive:
        path: "{{ rc_playbooks_dir }}/*"
        dest: "/tmp/ansible-playbooks.tar.gz"
        mode: "0644"
        format: "gz"
        force_archive: true
        exclude_path:
          - "{{ rc_playbooks_dir }}/.git"
          - "{{ rc_playbooks_dir }}/molecule"
      delegate_to: localhost

    - name: "Ensure playbook directory exists on live environment"
      ansible.builtin.file:
        path: "/opt/ansible-playbooks"
        state: "directory"
        mode: "0750"

    - name: "Unarchive playbook on live environment"
      ansible.builtin.unarchive:
        src: "/tmp/ansible-playbooks.tar.gz"
        dest: "/opt/ansible-playbooks/"
        list_files: false
        remote_src: false

- name: "Update ansible (chroot) host in inventory"
  ansible.builtin.copy:
    dest: "/opt/ansible-playbooks/inventory/hosts.yml"
    mode: "0640"
    content: |
      chroot:
        vars:
          ansible_connection: "chroot"
          ansible_chroot_exe: "arch-chroot"
        hosts:
          {{ install_root_path }}:

- name: "Download playbook dependencies on live environment"
  ansible.builtin.command:
    cmd: "ansible-galaxy install -r /opt/ansible-playbooks/requirements.yml"
  changed_when: true

- name: "Run configure playbook locally using chroot connection"
  ansible.builtin.command:
    cmd: |
      ansible-playbook distro-configure.yml
        --limit "chroot"
        --extra-vars '{"hostname":"{{ hostname }}"}'
        --extra-vars "@/opt/ansible-playbooks/host_vars/{{ hostname }}.yml"
        --tags 'required_for_boot'
    chdir: "/opt/ansible-playbooks"
  register: playbook
  changed_when: true

- name: "Playbook stdout"
  ansible.builtin.debug:
    msg: "{{ playbook.stdout_lines }}"
